const {Carta: CartaModel} = require("../models/Carta");

const cartaController ={

    create: async(req,res)=>{
        try {
            const carta = {
                _id: {
                    id_carta: req.body.id_carta,
                    id_colecao: req.body.id_colecao
                },
                nome:req.body.nome,
                categoria: req.body.categoria,
                sub_tipo: req.body.sub_tipo,
                imagem: req.body.imagem

            };
            const response = await CartaModel.create(carta);
            res.status(201).json({response, msg: "Serviço criado com sucesso!"})
        } catch (error) {
            console.log(error)
            
        }
    },
    getAll: async(req,res)=>{
        try {
            const cartas = await CartaModel.find();
            res.json(cartas)
        } catch (error) {
            console.log(error)
            
        }
    },
    get: async(req,res)=>{
        try {
            const id_carta = req.query.id_carta;
            const id_colecao = req.query.id_colecao;
            const carta = await CartaModel.findOne({ _id: { id_carta, id_colecao } });
            if(!carta){
                res.status(404).json( {msg: "Não encontrado!"})
                return
            }
            res.json(carta)
        } catch (error) {
            console.log(error)
            
        }
    },
    delete: async(req,res)=>{
        try {
            const id_carta = req.query.id_carta;
            const id_colecao = req.query.id_colecao;
            const carta = await CartaModel.findOneAndDelete({ _id: { id_carta, id_colecao } });
            if(!carta){
                res.status(404).json( {msg: "Não encontrado!"})
                return
            }
            res.status(200).json({carta, msg: "Exclu_ido com sucesso!"})
        } catch (error) {
            console.log(error)
            
        }
    },
    update: async(req,res)=>{
        try {
            const _id = req.params._id
            const carta = {
                _id: {
                    id_carta: req.body.id_carta,
                    id_colecao: req.body.id_colecao
                },
                nome:req.body.nome,
                categoria: req.body.categoria,
                sub_tipo: req.body.sub_tipo,
                imagem: req.body.imagem,

            };
            const UpdatedCarta = await CartaModel.findByIdAndUpdate(_id,carta);
            if(!UpdatedCarta){
                res.status(404).json( {msg: "Não encontrado!"})
                return
            }
            res.status(200).json({carta, msg: "Carta Atualizado!"})
        } catch (error) {
            console.log(error)
            
        }
    },
}
module.exports = cartaController